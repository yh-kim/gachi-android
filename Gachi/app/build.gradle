apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion propCompileSdkVersion
    buildToolsVersion propBuildToolsVersion
    defaultConfig {
        applicationId "com.pickth.gachi"
        minSdkVersion propMinSdkVersion
        targetSdkVersion propTargetSdkVersion
        versionCode propVersionCode
        versionName propVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        debug {
            minifyEnabled false
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt')
            proguardFiles 'proguard-rules.pro'
            proguardFiles 'proguard-kakao.pro'
            proguardFiles 'proguard-retrofit2.pro'
            proguardFiles 'proguard-gson.pro'
            proguardFiles 'proguard-picasso.pro'
            proguardFiles 'proguard-glide.pro'
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt')
            proguardFiles 'proguard-rules.pro'
            proguardFiles 'proguard-kakao.pro'
            proguardFiles 'proguard-retrofit2.pro'
            proguardFiles 'proguard-gson.pro'
            proguardFiles 'proguard-picasso.pro'
            proguardFiles 'proguard-glide.pro'

            applicationVariants.all { variant ->
                variant.outputs.each {
                    output ->
                        def file = output.outputFile
                        output.outputFile = new File(file.parent,
                                file.name.replace("app", "Gachi" + defaultConfig.versionName))

                        def date = new Date();
                        def formattedDate = date.format('yyyy_MM_dd_HH_mm_ss')
                        output.outputFile = new File(output.outputFile.parent,
                                output.outputFile.name.replace("-release", "-release-" + formattedDate)
                        )
                }
            }
        }
    }
    packagingOptions {
        exclude 'META-INF/commons_release.kotlin_module'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin' // src/main/kotlin 디렉터리를 소스 디렉터리에 추가합니다.
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    compile 'com.pickth:commons:1.0.3'

    // Support
    compile "com.android.support:appcompat-v7:$support_libs"
    compile "com.android.support:recyclerview-v7:$support_libs"
    compile "com.android.support:design:$support_libs"
    compile "com.android.support:support-vector-drawable:$support_libs"
    compile 'com.android.support.constraint:constraint-layout:1.0.2'

    // Kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    // Anko
    compile "org.jetbrains.anko:anko-commons:$anko_version"
    compile "org.jetbrains.anko:anko-sdk25:$anko_version"

    // Retrofit
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'

    // Picasso
    compile 'com.squareup.picasso:picasso:2.5.2'

    // Glide
    compile 'com.github.bumptech.glide:glide:4.0.0-RC1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.0.0-RC1'

    // kakao login
    compile group: 'com.kakao.sdk', name: 'usermgmt', version: project.KAKAO_SDK_VERSION
    // kakao link
    compile group: 'com.kakao.sdk', name: 'kakaolink', version: project.KAKAO_SDK_VERSION
    // kakao talk
    compile group: 'com.kakao.sdk', name: 'kakaotalk', version: project.KAKAO_SDK_VERSION
}
